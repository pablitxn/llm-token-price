name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: apps/web/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./apps/web

      - name: Run type check
        run: pnpm run type-check
        working-directory: ./apps/web

      - name: Run linter
        run: pnpm run lint
        working-directory: ./apps/web

      - name: Run tests
        id: test-run
        run: |
          # Check if test script exists in package.json
          if grep -q '"test"' package.json; then
            pnpm run test:run || pnpm test || echo "No tests configured yet"
          else
            echo "‚ö†Ô∏è No test script found in package.json - skipping tests"
            echo "Tests will be added in future stories (Epic 3+)"
          fi
        working-directory: ./apps/web
        continue-on-error: true

      - name: Build application
        run: pnpm run build
        working-directory: ./apps/web

      - name: Check bundle size
        run: |
          # Get build output size
          BUILD_SIZE=$(du -sh dist | cut -f1)
          echo "üì¶ Bundle size: $BUILD_SIZE"

          # Check if dist folder exists
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful"
          else
            echo "‚ùå Build failed - no dist folder"
            exit 1
          fi
        working-directory: ./apps/web
