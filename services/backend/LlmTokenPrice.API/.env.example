# LLM Token Price - Environment Variables Template
# Copy this file to .env and fill in the values for your environment
# WARNING: Never commit .env file to version control

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Connection String
# Format: Host={host};Port={port};Database={database};Username={username};Password={password}
# Development example (Docker Compose):
DATABASE_CONNECTION_STRING=Host=localhost;Port=5434;Database=llmpricing_dev;Username=llmpricing;Password=dev_password

# Production example:
# DATABASE_CONNECTION_STRING=Host=prod-db.example.com;Port=5432;Database=llmpricing_prod;Username=llmpricing;Password=STRONG_RANDOM_PASSWORD

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

# Redis Connection String
# Format: {host}:{port},abortConnect=false
# Development example (Docker Compose, no auth):
REDIS_CONNECTION_STRING=localhost:6379,abortConnect=false

# Production example (with authentication):
# REDIS_CONNECTION_STRING=prod-redis.example.com:6379,password=REDIS_PASSWORD,abortConnect=false,ssl=true

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================

# JWT Secret Key
# CRITICAL: Must be at least 32 characters for HS256 algorithm
# Generate with: openssl rand -base64 32
# Development example (NOT FOR PRODUCTION):
JWT_SECRET_KEY=your-super-secret-jwt-key-at-least-32-characters-long

# Production example (generate a strong random key):
# JWT_SECRET_KEY=8pQ7vK3jN9mR2wX5yZ8aB1cD4eF6gH7iJ0kL1mN2oP3qR4sT5uV6wX7yZ8aB1cD

# JWT Token Lifetime (in hours)
# Default: 24 hours for access tokens
JWT_TOKEN_LIFETIME_HOURS=24

# ============================================================================
# CORS CONFIGURATION
# ============================================================================

# Allowed Origins (comma-separated list)
# Development example:
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# Staging example:
# CORS_ALLOWED_ORIGINS=https://staging.llmpricing.com

# Production example:
# CORS_ALLOWED_ORIGINS=https://llmpricing.com,https://www.llmpricing.com

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================

# ASP.NET Core Environment
# Values: Development, Staging, Production
ASPNETCORE_ENVIRONMENT=Development

# Logging Level
# Values: Trace, Debug, Information, Warning, Error, Critical
LOGGING_LEVEL=Information

# ============================================================================
# RATE LIMITING (OPTIONAL)
# ============================================================================

# Rate limit for admin endpoints (requests per minute per IP)
# Default: 100 requests/minute
ADMIN_RATE_LIMIT_PER_MINUTE=100

# ============================================================================
# SEEDING (DEVELOPMENT ONLY)
# ============================================================================

# Enable/disable automatic database seeding on startup
# Set to false in production to prevent accidental data overwrites
ENABLE_DATABASE_SEEDING=true

# ============================================================================
# MONITORING & OBSERVABILITY (PRODUCTION)
# ============================================================================

# Application Insights Connection String (Azure)
# APPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=...;IngestionEndpoint=...

# Sentry DSN (Error tracking)
# SENTRY_DSN=https://...@sentry.io/...

# ============================================================================
# NOTES
# ============================================================================

# Development vs Production:
# - Development: Use weak passwords, localhost connections, verbose logging
# - Staging: Use production-like credentials, HTTPS origins, test with real data
# - Production: Use strong random passwords, HTTPS only, secure secrets management (Azure Key Vault, AWS Secrets Manager)

# Security Best Practices:
# 1. Never commit .env file to version control (add to .gitignore)
# 2. Use environment-specific configuration (appsettings.Development.json vs appsettings.Production.json)
# 3. Rotate JWT secrets regularly (every 90 days recommended)
# 4. Use strong random passwords (min 32 characters for production)
# 5. Enable SSL/TLS for Redis and PostgreSQL in production
# 6. Store production secrets in secure vaults (never in plain text files)

# GitHub Actions Secrets:
# When deploying via CI/CD, configure these as repository secrets:
# - Settings → Secrets and variables → Actions → New repository secret
# - Required secrets: JWT_SECRET_KEY, DATABASE_CONNECTION_STRING, REDIS_CONNECTION_STRING, CORS_ALLOWED_ORIGINS

# Minimum .env file for local development:
# DATABASE_CONNECTION_STRING=Host=localhost;Port=5434;Database=llmpricing_dev;Username=llmpricing;Password=dev_password
# REDIS_CONNECTION_STRING=localhost:6379,abortConnect=false
# JWT_SECRET_KEY=dev-secret-key-at-least-32-characters-long-for-local
# CORS_ALLOWED_ORIGINS=http://localhost:5173
