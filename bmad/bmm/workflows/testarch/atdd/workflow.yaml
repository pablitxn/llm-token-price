# Test Architect workflow: atdd
name: testarch-atdd
description: "Generate failing acceptance tests before implementation using TDD red-green-refactor cycle"
author: "BMad"

# Critical variables from config
config_source: "{project-root}/bmad/bmm/config.yaml"
output_folder: "{config_source}:output_folder"
user_name: "{config_source}:user_name"
communication_language: "{config_source}:communication_language"
date: system-generated

# Workflow components
installed_path: "{project-root}/bmad/bmm/workflows/testarch/atdd"
instructions: "{installed_path}/instructions.md"
validation: "{installed_path}/checklist.md"
template: "{installed_path}/atdd-checklist-template.md"

# Variables and inputs
variables:
  # Story context
  story_file: "" # Path to story markdown with acceptance criteria
  test_dir: "{project-root}/tests"
  test_framework: "" # Detected from framework workflow (playwright, cypress)

  # Test level selection
  test_levels: "e2e,api,component" # Which levels to generate
  primary_level: "e2e" # Primary test level for acceptance criteria
  include_component_tests: true # Generate component tests for UI logic

  # ATDD approach
  start_failing: true # Tests must fail initially (red phase)
  use_given_when_then: true # BDD-style test structure
  network_first: true # Route interception before navigation
  one_assertion_per_test: true # Atomic test design

  # Data and fixtures
  generate_factories: true # Create data factory stubs
  generate_fixtures: true # Create fixture architecture
  auto_cleanup: true # Fixtures clean up their data

  # Output configuration
  output_checklist: "{output_folder}/atdd-checklist-{story_id}.md"
  include_data_testids: true # List required data-testid attributes
  include_mock_requirements: true # Document mock/stub needs

  # Advanced options
  auto_load_knowledge: true # Load fixture-architecture, data-factories, component-tdd fragments
  share_with_dev: true # Provide implementation checklist to DEV agent

# Output configuration
default_output_file: "{output_folder}/atdd-checklist-{story_id}.md"

# Required tools
required_tools:
  - read_file # Read story markdown, framework config
  - write_file # Create test files, checklist, factory stubs
  - create_directory # Create test directories
  - list_files # Find existing fixtures and helpers
  - search_repo # Search for similar test patterns

# Recommended inputs
recommended_inputs:
  - story: "Story markdown with acceptance criteria (required)"
  - framework_config: "Test framework configuration (playwright.config.ts, cypress.config.ts)"
  - existing_fixtures: "Current fixture patterns for consistency"
  - test_design: "Test design document (optional, for risk/priority context)"

tags:
  - qa
  - atdd
  - test-architect
  - tdd
  - red-green-refactor

execution_hints:
  interactive: false # Minimize prompts
  autonomous: true # Proceed without user input unless blocked
  iterative: true
